/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@apple-name: 'apple';
@apple-x: 260px;
@apple-y: 0px;
@apple-offset-x: -260px;
@apple-offset-y: 0px;
@apple-width: 64px;
@apple-height: 64px;
@apple-total-width: 324px;
@apple-total-height: 324px;
@apple-image: '~btn.png';
@apple: 260px 0px -260px 0px 64px 64px 324px 324px '~btn.png' 'apple';
@apple-2x-name: 'apple@2x';
@apple-2x-x: 0px;
@apple-2x-y: 0px;
@apple-2x-offset-x: 0px;
@apple-2x-offset-y: 0px;
@apple-2x-width: 128px;
@apple-2x-height: 128px;
@apple-2x-total-width: 324px;
@apple-2x-total-height: 324px;
@apple-2x-image: '~btn.png';
@apple-2x: 0px 0px 0px 0px 128px 128px 324px 324px '~btn.png' 'apple@2x';
@gmail-name: 'gmail';
@gmail-x: 260px;
@gmail-y: 66px;
@gmail-offset-x: -260px;
@gmail-offset-y: -66px;
@gmail-width: 64px;
@gmail-height: 64px;
@gmail-total-width: 324px;
@gmail-total-height: 324px;
@gmail-image: '~btn.png';
@gmail: 260px 66px -260px -66px 64px 64px 324px 324px '~btn.png' 'gmail';
@gmail-2x-name: 'gmail@2x';
@gmail-2x-x: 130px;
@gmail-2x-y: 0px;
@gmail-2x-offset-x: -130px;
@gmail-2x-offset-y: 0px;
@gmail-2x-width: 128px;
@gmail-2x-height: 128px;
@gmail-2x-total-width: 324px;
@gmail-2x-total-height: 324px;
@gmail-2x-image: '~btn.png';
@gmail-2x: 130px 0px -130px 0px 128px 128px 324px 324px '~btn.png' 'gmail@2x';
@microsoft-name: 'microsoft';
@microsoft-x: 260px;
@microsoft-y: 132px;
@microsoft-offset-x: -260px;
@microsoft-offset-y: -132px;
@microsoft-width: 64px;
@microsoft-height: 64px;
@microsoft-total-width: 324px;
@microsoft-total-height: 324px;
@microsoft-image: '~btn.png';
@microsoft: 260px 132px -260px -132px 64px 64px 324px 324px '~btn.png' 'microsoft';
@microsoft-2x-name: 'microsoft@2x';
@microsoft-2x-x: 0px;
@microsoft-2x-y: 130px;
@microsoft-2x-offset-x: 0px;
@microsoft-2x-offset-y: -130px;
@microsoft-2x-width: 128px;
@microsoft-2x-height: 128px;
@microsoft-2x-total-width: 324px;
@microsoft-2x-total-height: 324px;
@microsoft-2x-image: '~btn.png';
@microsoft-2x: 0px 130px 0px -130px 128px 128px 324px 324px '~btn.png' 'microsoft@2x';
@youtube-name: 'youtube';
@youtube-x: 0px;
@youtube-y: 260px;
@youtube-offset-x: 0px;
@youtube-offset-y: -260px;
@youtube-width: 64px;
@youtube-height: 64px;
@youtube-total-width: 324px;
@youtube-total-height: 324px;
@youtube-image: '~btn.png';
@youtube: 0px 260px 0px -260px 64px 64px 324px 324px '~btn.png' 'youtube';
@youtube-2x-name: 'youtube@2x';
@youtube-2x-x: 130px;
@youtube-2x-y: 130px;
@youtube-2x-offset-x: -130px;
@youtube-2x-offset-y: -130px;
@youtube-2x-width: 128px;
@youtube-2x-height: 128px;
@youtube-2x-total-width: 324px;
@youtube-2x-total-height: 324px;
@youtube-2x-image: '~btn.png';
@youtube-2x: 130px 130px -130px -130px 128px 128px 324px 324px '~btn.png' 'youtube@2x';
@spritesheet-width: 324px;
@spritesheet-height: 324px;
@spritesheet-image: '~btn.png';
@spritesheet-sprites: @apple @apple-2x @gmail @gmail-2x @microsoft @microsoft-2x @youtube @youtube-2x;
@spritesheet: 324px 324px '~btn.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5) / 2;
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6) / 2;
}

//  nth是指#block "sprites"第几个参数，可以输出$sprite来查看,
.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x / 2 @sprite-offset-y / 2;
  background-size: extract(@sprite, 7) / 2 auto;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
